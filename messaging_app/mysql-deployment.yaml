<<<<<<< HEAD
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-db-deployment
  labels:
    app: mysql-db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql-db
  template:
    metadata:
      labels:
        app: mysql-db
    spec:
      containers:
      - name: mysql-container
        image: mysql:8.0 
        ports:
        - containerPort: 3306
        env:
        - name: MYSQL_DATABASE
          value: "mydjangoappdb" 

        - name: MYSQL_USER
          value: "user" 

        - name: MYSQL_PASSWORD
          value: "password" 

        - name: MYSQL_ROOT_PASSWORD
          value: "rootpassword"
   
=======
# --- MySQL Service (Internal Cluster Communication) ---
apiVersion: v1
kind: Service
metadata:
  name: mysql-service
spec:
  ports:
  - port: 3306
  selector:
    app: mysql
  clusterIP: None 

---

# --- MySQL Deployment (Persistent Database) ---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-deployment
spec:
  selector:
    matchLabels:
      app: mysql
  strategy:
    type: Recreate 
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - image: mysql:8.0
        name: mysql
        env:
        # simple environment variables for Minikube
        - name: MYSQL_ROOT_PASSWORD
          value: "rootpassword"
        - name: MYSQL_DATABASE
          value: "messaging_db"
        ports:
        - containerPort: 3306
        volumeMounts:
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql
 
  volumeClaimTemplates:
  - metadata:
      name: mysql-persistent-storage
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 5Gi
>>>>>>> kubernete-basic
